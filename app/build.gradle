apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'


//通过 apply from 可以导入一个gradle文件
apply from: "./local.gradle"

noArg {
    annotations "com.tengfei.common.anno.PoKo"
}

allOpen{
    annotations "com.tengfei.common.anno.PoKo"
}


/**
 * 如果你的类需要借助KAE进行序列化，那么kotlin闭包下的代码必须写
 */
kotlin{
    experimental{
        coroutines "enable"
    }
    androidExtensions{
        experimental = true
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tengfei.github"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            buildConfigField "String", "testUserName", "" + project.userName + ""
            buildConfigField "String", "testPassWord", "" + project.passWord + ""
        }

        release {
            buildConfigField "String", "testUserName", "\"\""
            buildConfigField "String", "testPassWord", "\"\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:design:$support_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'



    implementation project(':common')
    implementation project(':mvp')
}
